Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-07-25T03:47:07+08:00

====== 第一章 初识Go语言 ======
创建日期 星期三 25 七月 2018

===== 1.1 语言简史 =====

Limbo是Go的前身；
Google是主推者；

===== 1.2 语言特性 =====

Go是全新的静态类型开发语言；
Go特性：自动垃圾回收、更丰富的内置类型、函数多返回值、错误处理、匿名函数和闭包、类型和接口、并发编程、反射、语言交互性。
内存检查工具：Rational Purify、Compuware Bounds Checker、Parallel Inspector。
内置类型：map；
数组类型：数组切片**Slice**。
函数多返回值。
错误处理：关键字：defer、panic、recover。
匿名函数和闭包。
类型和接口。
并发编程：goroutine，通过go调用，使用channel实现了CSP（通信顺序进程，Communicating Sequential Process），提供一个完备的读写锁。
反射：获取对象类型的详细信息，动态操作对象，对象序列化。
语言交互性：命名为Cgo。

===== 1.3 第一个Go程序 =====

代码：
[[/**************************/]]
package main

import "fmt"

func main(){
	fmt.Println("Hello world!")
}
[[/**************************/]]
每个Go源代码文件的开头都是package声明，表示Go代码所属的包，包是Go语言里最基本的分发单位，必须建立一个main包，并且包含一个main()函数。
Go语言main函数不能带参数，也不能定义返回值。命令行传入的o参数在os.Ards变量中保存，如果需要支持命令行开关，可使用flag包。
在包声明后是import语句，导入程序需要的包。
所有Go函数以func开头 ，如下：
func 函数名 (参数列表) (返回值列表) {
	//函数体
}
Go支持多个返回值，注释语句同C++。
编译程序：
直接运行：go run hello.go
或先编译：go build hello.go
或用其他：6g hello.go	6l hello.6	[[./6.out]]
针对64位，32位使用8g或8l，或使用gccgo。

===== 1.4 开发工具选择 =====
开发工具推荐：
安装GoClipse的Eclipse；
Vim/Emacs；
LiteIDE。

===== 1.5 工程管理 =====
go build 命令自动，不需make。

===== 1.6 问题追踪和调试 =====
打印日志：fmt.Println()和fmt.Printf()
GDB调试。


